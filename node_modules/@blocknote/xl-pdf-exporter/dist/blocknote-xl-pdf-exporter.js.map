{"version":3,"file":"blocknote-xl-pdf-exporter.js","sources":["../src/pdf/util/listItem.tsx","../src/pdf/util/table/Table.tsx","../src/pdf/defaultSchema/blocks.tsx","../src/pdf/defaultSchema/inlinecontent.tsx","../src/pdf/defaultSchema/styles.tsx","../src/pdf/defaultSchema/index.ts","../../../shared/api/corsProxy.ts","../../../shared/util/fileUtil.ts","../src/pdf/pdfExporter.tsx"],"sourcesContent":["import { Path, StyleSheet, Svg, Text, View } from \"@react-pdf/renderer\";\nimport { Style } from \"../types.js\";\n\n// https://github.com/diegomura/react-pdf/issues/134\n\nconst PIXELS_PER_POINT = 0.75;\n\nconst styles = StyleSheet.create({\n  listItem: {\n    display: \"flex\",\n    flexDirection: \"row\",\n    gap: 8 * PIXELS_PER_POINT,\n    paddingRight: 10, // otherwise text overflows, seems like a react-pdf / yoga bug\n  },\n  bullet: {\n    fontFamily: \"\", // TODO: add symbol font\n  },\n});\n\nexport const BULLET_MARKER = \"\\u2022\";\n\n// https://fonts.google.com/icons?selected=Material+Symbols+Outlined:check_box_outline_blank:FILL@0;wght@400;GRAD@0;opsz@24&icon.size=24&icon.color=undefined\nexport const CHECK_MARKER_UNCHECKED = (\n  <Svg\n    style={{ marginTop: 2 }}\n    height=\"12\"\n    viewBox=\"0 -960 960 960\"\n    width=\"12\"\n    fill=\"undefined\">\n    <Path d=\"M200-120q-33 0-56.5-23.5T120-200v-560q0-33 23.5-56.5T200-840h560q33 0 56.5 23.5T840-760v560q0 33-23.5 56.5T760-120H200Zm0-80h560v-560H200v560Z\" />\n  </Svg>\n);\n\n// https://fonts.google.com/icons?selected=Material+Symbols+Outlined:check_box:FILL@0;wght@400;GRAD@0;opsz@24&icon.size=24&icon.color=undefined\nexport const CHECK_MARKER_CHECKED = (\n  <Svg\n    style={{ marginTop: 2 }}\n    height=\"12\"\n    viewBox=\"0 -960 960 960\"\n    width=\"12\"\n    fill=\"undefined\">\n    <Path d=\"m424-312 282-282-56-56-226 226-114-114-56 56 170 170ZM200-120q-33 0-56.5-23.5T120-200v-560q0-33 23.5-56.5T200-840h560q33 0 56.5 23.5T840-760v560q0 33-23.5 56.5T760-120H200Zm0-80h560v-560H200v560Zm0-560v560-560Z\" />\n  </Svg>\n);\n\nexport const ListItem = ({\n  listMarker,\n  children,\n  style,\n}: {\n  listMarker: string | React.ReactNode;\n  children: React.ReactNode;\n  style?: Style;\n}) => {\n  return (\n    <View style={[styles.listItem, style || {}]}>\n      <View style={styles.bullet}>\n        {/* <Svg width={2} height={2}>\n            <Circle cx=\"1\" cy=\"1\" r=\"2\" fill=\"black\" />\n          </Svg> */}\n        {typeof listMarker === \"string\" ? (\n          <Text>{listMarker}</Text>\n        ) : (\n          listMarker\n        )}\n      </View>\n      {children}\n    </View>\n  );\n};\n","import {\n  Exporter,\n  InlineContentSchema,\n  StyleSchema,\n  TableContent,\n} from \"@blocknote/core\";\nimport { StyleSheet, View } from \"@react-pdf/renderer\";\nconst PIXELS_PER_POINT = 0.75;\n\n// ( impossible?) to make tables with flex that don't have a fixed / 100% width?\n// we'd need to measure the width of every column manually\nconst styles = StyleSheet.create({\n  tableContainer: {\n    // width: \"100%\",\n  },\n  row: {\n    flexDirection: \"row\",\n    flexWrap: \"wrap\",\n    // width: \"100%\",\n    // justifyContent: \"space-between\",\n    display: \"flex\",\n  },\n  cell: {\n    paddingHorizontal: 5 * PIXELS_PER_POINT,\n    paddingTop: 3 * PIXELS_PER_POINT,\n    // paddingBottom: 1 * PIXELS_PER_POINT, should be 3px but looks odd, better with no padding Bottom\n    borderLeft: \"1px solid #ddd\",\n    borderTop: \"1px solid #ddd\",\n    wordWrap: \"break-word\",\n    whiteSpace: \"pre-wrap\",\n  },\n  bottomCell: {\n    borderBottom: \"1px solid #ddd\",\n  },\n  rightCell: {\n    borderRight: \"1px solid #ddd\",\n  },\n});\n\nexport const Table = (props: {\n  data: TableContent<InlineContentSchema>;\n  transformer: Exporter<\n    any,\n    InlineContentSchema,\n    StyleSchema,\n    any,\n    any,\n    any,\n    any\n  >;\n}) => (\n  <View style={styles.tableContainer} wrap={false}>\n    {props.data.rows.map((row, index) => (\n      <View\n        style={[\n          styles.row,\n          index === props.data.rows.length - 1 ? styles.bottomCell : {},\n        ]}\n        key={index}>\n        {row.cells.map((cell, index) => (\n          <View\n            style={[\n              styles.cell,\n              index === row.cells.length - 1 ? styles.rightCell : {},\n              props.data.columnWidths[index]\n                ? { width: props.data.columnWidths[index] }\n                : { flex: 1 },\n            ]}\n            key={index}>\n            {props.transformer.transformInlineContent(cell)}\n          </View>\n        ))}\n      </View>\n    ))}\n  </View>\n);\n","import {\n  BlockMapping,\n  DefaultBlockSchema,\n  DefaultProps,\n  pageBreakSchema,\n  StyledText,\n} from \"@blocknote/core\";\nimport { Image, Link, Path, Svg, Text, View } from \"@react-pdf/renderer\";\nimport {\n  BULLET_MARKER,\n  CHECK_MARKER_CHECKED,\n  CHECK_MARKER_UNCHECKED,\n  ListItem,\n} from \"../util/listItem.js\";\nimport { Table } from \"../util/table/Table.js\";\n\nconst PIXELS_PER_POINT = 0.75;\nconst FONT_SIZE = 16;\n\nexport const pdfBlockMappingForDefaultSchema: BlockMapping<\n  DefaultBlockSchema & typeof pageBreakSchema.blockSchema,\n  any,\n  any,\n  React.ReactElement<Text>,\n  React.ReactElement<Text> | React.ReactElement<Link>\n> = {\n  paragraph: (block, exporter) => {\n    // const style = blocknoteDefaultPropsToReactPDFStyle(block.props);\n    return <Text>{exporter.transformInlineContent(block.content)}</Text>;\n  },\n  bulletListItem: (block, exporter) => {\n    // const style = t(block.props);\n    return (\n      <ListItem listMarker={BULLET_MARKER}>\n        <Text>{exporter.transformInlineContent(block.content)}</Text>\n      </ListItem>\n    );\n  },\n  numberedListItem: (block, exporter, _nestingLevel, numberedListIndex) => {\n    // const style = blocknoteDefaultPropsToReactPDFStyle(block.props);\n    // console.log(\"NUMBERED LIST ITEM\", block.props.textAlignment, style);\n    return (\n      <ListItem listMarker={`${numberedListIndex}.`}>\n        <Text>{exporter.transformInlineContent(block.content)}</Text>\n      </ListItem>\n    );\n  },\n  // would be nice to have pdf checkboxes:\n  // https://github.com/diegomura/react-pdf/issues/2103\n  checkListItem: (block, exporter) => {\n    return (\n      <ListItem\n        listMarker={\n          block.props.checked ? CHECK_MARKER_CHECKED : CHECK_MARKER_UNCHECKED\n        }>\n        <Text>{exporter.transformInlineContent(block.content)}</Text>\n      </ListItem>\n    );\n  },\n  heading: (block, exporter) => {\n    const fontSizeEM =\n      block.props.level === 1 ? 2 : block.props.level === 2 ? 1.5 : 1.17;\n    return (\n      <Text\n        style={{\n          fontSize: fontSizeEM * FONT_SIZE * PIXELS_PER_POINT,\n          fontWeight: 700,\n        }}>\n        {exporter.transformInlineContent(block.content)}\n      </Text>\n    );\n  },\n  codeBlock: (block) => {\n    const textContent = (block.content as StyledText<any>[])[0]?.text || \"\";\n    const lines = textContent.split(\"\\n\").map((line, index) => {\n      const indent = line.match(/^\\s*/)?.[0].length || 0;\n\n      return (\n        <Text\n          key={`line_${index}`}\n          style={{\n            marginLeft: indent * 9.5 * PIXELS_PER_POINT,\n          }}>\n          {line.trimStart() || <>&nbsp;</>}\n        </Text>\n      );\n    });\n\n    return (\n      <View\n        wrap={false}\n        style={{\n          padding: 24 * PIXELS_PER_POINT,\n          backgroundColor: \"#161616\",\n          color: \"#ffffff\",\n          lineHeight: 1.25,\n          fontSize: FONT_SIZE * PIXELS_PER_POINT,\n          fontFamily: \"GeistMono\",\n        }}>\n        {lines}\n      </View>\n    );\n  },\n  pageBreak: () => {\n    return <View break />;\n  },\n  audio: (block, exporter) => {\n    return (\n      <View wrap={false}>\n        {file(\n          block.props,\n          \"Open audio file\",\n          <Svg height={14} width={14} viewBox=\"0 0 24 24\" fill=\"currentColor\">\n            <Path d=\"M2 16.0001H5.88889L11.1834 20.3319C11.2727 20.405 11.3846 20.4449 11.5 20.4449C11.7761 20.4449 12 20.2211 12 19.9449V4.05519C12 3.93977 11.9601 3.8279 11.887 3.73857C11.7121 3.52485 11.3971 3.49335 11.1834 3.66821L5.88889 8.00007H2C1.44772 8.00007 1 8.44778 1 9.00007V15.0001C1 15.5524 1.44772 16.0001 2 16.0001ZM23 12C23 15.292 21.5539 18.2463 19.2622 20.2622L17.8445 18.8444C19.7758 17.1937 21 14.7398 21 12C21 9.26016 19.7758 6.80629 17.8445 5.15557L19.2622 3.73779C21.5539 5.75368 23 8.70795 23 12ZM18 12C18 10.0883 17.106 8.38548 15.7133 7.28673L14.2842 8.71584C15.3213 9.43855 16 10.64 16 12C16 13.36 15.3213 14.5614 14.2842 15.2841L15.7133 16.7132C17.106 15.6145 18 13.9116 18 12Z\"></Path>\n          </Svg>,\n          exporter\n        )}\n        {caption(block.props, exporter)}\n      </View>\n    );\n  },\n  video: (block, exporter) => {\n    return (\n      <View wrap={false}>\n        {file(\n          block.props,\n          \"Open video file\",\n          <Svg height={14} width={14} viewBox=\"0 0 24 24\" fill=\"currentColor\">\n            <Path d=\"M2 3.9934C2 3.44476 2.45531 3 2.9918 3H21.0082C21.556 3 22 3.44495 22 3.9934V20.0066C22 20.5552 21.5447 21 21.0082 21H2.9918C2.44405 21 2 20.5551 2 20.0066V3.9934ZM8 5V19H16V5H8ZM4 5V7H6V5H4ZM18 5V7H20V5H18ZM4 9V11H6V9H4ZM18 9V11H20V9H18ZM4 13V15H6V13H4ZM18 13V15H20V13H18ZM4 17V19H6V17H4ZM18 17V19H20V17H18Z\" />\n          </Svg>,\n          exporter\n        )}\n        {caption(block.props, exporter)}\n      </View>\n    );\n  },\n  file: (block, exporter) => {\n    return (\n      <View wrap={false}>\n        {file(\n          block.props,\n          \"Open file\",\n          <Svg height={16} width={16} viewBox=\"0 0 24 24\" fill=\"currentColor\">\n            <Path d=\"M3 8L9.00319 2H19.9978C20.5513 2 21 2.45531 21 2.9918V21.0082C21 21.556 20.5551 22 20.0066 22H3.9934C3.44476 22 3 21.5501 3 20.9932V8ZM10 4V9H5V20H19V4H10Z\" />\n          </Svg>,\n          exporter\n        )}\n        {caption(block.props, exporter)}\n      </View>\n    );\n  },\n  image: async (block, t) => {\n    return (\n      <View wrap={false}>\n        <Image\n          src={await t.resolveFile(block.props.url)}\n          style={{\n            width: block.props.previewWidth * PIXELS_PER_POINT,\n          }}\n        />\n        {caption(block.props, t)}\n      </View>\n    );\n  },\n  table: (block, t) => {\n    return <Table data={block.content} transformer={t} />;\n  },\n};\n\nfunction file(\n  props: Partial<DefaultProps & { name: string; url: string }>,\n  defaultText: string,\n  icon: React.ReactElement<Svg>,\n  _exporter: any\n) {\n  const PIXELS_PER_POINT = 0.75;\n  return (\n    <Link src={props.url}>\n      <View\n        style={{\n          display: \"flex\",\n          gap: 8 * PIXELS_PER_POINT,\n          flexDirection: \"row\",\n        }}>\n        {icon}\n        <Text>{props.name || defaultText}</Text>\n      </View>\n    </Link>\n  );\n}\n\nfunction caption(\n  props: Partial<DefaultProps & { caption: string; previewWidth: number }>,\n  _exporter: any\n) {\n  if (!props.caption) {\n    return undefined;\n  }\n  return (\n    <Text\n      style={{\n        width: props.previewWidth\n          ? props.previewWidth * PIXELS_PER_POINT\n          : undefined,\n        fontSize: FONT_SIZE * 0.8 * PIXELS_PER_POINT,\n      }}>\n      {props.caption}\n    </Text>\n  );\n}\n","import {\n  DefaultInlineContentSchema,\n  InlineContentMapping,\n} from \"@blocknote/core\";\nimport { Link, Text } from \"@react-pdf/renderer\";\n\nexport const pdfInlineContentMappingForDefaultSchema: InlineContentMapping<\n  DefaultInlineContentSchema,\n  any,\n  React.ReactElement<Link> | React.ReactElement<Text>,\n  React.ReactElement<Text>\n> = {\n  link: (ic, exporter) => {\n    return (\n      <Link href={ic.href}>\n        {ic.content.map((content) => exporter.transformStyledText(content))}\n      </Link>\n    );\n  },\n  text: (ic, exporter) => {\n    return exporter.transformStyledText(ic);\n  },\n};\n","import { DefaultStyleSchema, StyleMapping } from \"@blocknote/core\";\nimport { TextProps } from \"@react-pdf/renderer\";\n\nexport const pdfStyleMappingForDefaultSchema: StyleMapping<\n  DefaultStyleSchema,\n  TextProps[\"style\"]\n> = {\n  bold: (val) => {\n    if (!val) {\n      return {};\n    }\n    return {\n      fontWeight: \"bold\",\n    };\n  },\n  italic: (val) => {\n    if (!val) {\n      return {};\n    }\n    return {\n      fontStyle: \"italic\",\n    };\n  },\n  underline: (val) => {\n    if (!val) {\n      return {};\n    }\n    return {\n      textDecoration: \"underline\", // TODO: could conflict with strike\n    };\n  },\n  strike: (val) => {\n    if (!val) {\n      return {};\n    }\n    return {\n      textDecoration: \"line-through\",\n    };\n  },\n  backgroundColor: (val, exporter) => {\n    if (!val) {\n      return {};\n    }\n    return {\n      backgroundColor:\n        exporter.options.colors[val as keyof typeof exporter.options.colors]\n          .background,\n    };\n  },\n  textColor: (val, exporter) => {\n    if (!val) {\n      return {};\n    }\n    return {\n      color:\n        exporter.options.colors[val as keyof typeof exporter.options.colors]\n          .text,\n    };\n  },\n  code: (val) => {\n    if (!val) {\n      return {};\n    }\n    return {\n      fontFamily: \"GeistMono\",\n    };\n  },\n};\n","import { pdfBlockMappingForDefaultSchema } from \"./blocks.js\";\nimport { pdfInlineContentMappingForDefaultSchema } from \"./inlinecontent.js\";\nimport { pdfStyleMappingForDefaultSchema } from \"./styles.js\";\n\nexport const pdfDefaultSchemaMappings = {\n  blockMapping: pdfBlockMappingForDefaultSchema,\n  inlineContentMapping: pdfInlineContentMappingForDefaultSchema,\n  styleMapping: pdfStyleMappingForDefaultSchema,\n};\n","export async function corsProxyResolveFileUrl(url: string) {\n  return (\n    \"https://corsproxy.api.blocknotejs.org/corsproxy/?url=\" +\n    encodeURIComponent(url)\n  );\n}\n","/**\n *\n * Helper functions so that we can import files both on vitest, browser and node\n * TODO: should find a way to test automatically in all environments\n */\n\nexport async function loadFileDataUrl(\n  requireUrl: { default: string },\n  mimeType: string\n) {\n  if (import.meta.env.NODE_ENV === \"test\") {\n    const buffer = await loadFileBuffer(requireUrl);\n    const fileBase64 = buffer.toString(\"base64\");\n\n    const dataUrl = `data:${mimeType};base64,${fileBase64}`;\n    return dataUrl;\n  } else {\n    // in browser, this is already a data url\n    return requireUrl.default as string;\n  }\n}\n\nexport async function loadFontDataUrl(requireUrl: { default: string }) {\n  return loadFileDataUrl(requireUrl, \"font/ttf\");\n}\n\nexport async function loadFileBuffer(requireUrl: {\n  default: string;\n}): Promise<Buffer | ArrayBuffer> {\n  if (import.meta.env.NODE_ENV === \"test\") {\n    // in vitest, this is the url we need to load with readfilesync\n    // eslint-disable-next-line\n    const fs = require(\"fs\");\n    let url = requireUrl.default;\n\n    if (url.startsWith(\"/@fs/\")) {\n      url = url.substring(\"/@fs\".length);\n    }\n    const buffer = fs.readFileSync(url);\n    return buffer;\n  } else {\n    // in browser, this is already a data url\n    const dataUrl = requireUrl.default as string;\n    // convert to buffer on browser\n    const response = await fetch(dataUrl);\n    const arrayBuffer = await response.arrayBuffer();\n    return arrayBuffer;\n  }\n}\n\n/**\n * usage:\n * \n *  await loadFontDataUrl(\n      await import(\"../fonts/inter/Inter_18pt-Italic.ttf\")\n    );\n */\n","import {\n  Block,\n  BlockNoteSchema,\n  BlockSchema,\n  COLORS_DEFAULT,\n  DefaultProps,\n  Exporter,\n  ExporterOptions,\n  InlineContentSchema,\n  StyleSchema,\n  StyledText,\n} from \"@blocknote/core\";\nimport {\n  Document,\n  Font,\n  Link,\n  Page,\n  StyleSheet,\n  Text,\n  TextProps,\n  View,\n} from \"@react-pdf/renderer\";\nimport { corsProxyResolveFileUrl } from \"@shared/api/corsProxy.js\";\nimport { loadFontDataUrl } from \"../../../../shared/util/fileUtil.js\";\n\nimport { Style } from \"./types.js\";\n\nconst FONT_SIZE = 16;\nconst PIXELS_PER_POINT = 0.75;\n\ntype Options = ExporterOptions & {\n  /**\n   *\n   * @default uses the remote emoji source hosted on cloudflare (https://cdnjs.cloudflare.com/ajax/libs/twemoji/14.0.2/72x72/)\n   */\n  emojiSource: false | ReturnType<typeof Font.getEmojiSource>;\n};\n\n/**\n * Exports a BlockNote document to a .pdf file using the react-pdf library.\n */\nexport class PDFExporter<\n  B extends BlockSchema,\n  S extends StyleSchema,\n  I extends InlineContentSchema\n> extends Exporter<\n  B,\n  I,\n  S,\n  React.ReactElement<Text>,\n  React.ReactElement<Link> | React.ReactElement<Text>,\n  TextProps[\"style\"],\n  React.ReactElement<Text>\n> {\n  private fontsRegistered = false;\n\n  public styles = StyleSheet.create({\n    page: {\n      paddingTop: 35,\n      paddingBottom: 65,\n      paddingHorizontal: 35,\n      fontFamily: \"Inter\",\n      fontSize: FONT_SIZE * PIXELS_PER_POINT, //  pixels\n      lineHeight: 1.5,\n    },\n    block: {},\n    blockChildren: {},\n    header: {},\n    footer: {\n      // @ts-ignore\n      position: \"absolute\",\n    },\n  });\n\n  public readonly options: Options;\n\n  public constructor(\n    /**\n     * The schema of your editor. The mappings are automatically typed checked against this schema.\n     */\n    protected readonly schema: BlockNoteSchema<B, I, S>,\n    /**\n     * The mappings that map the BlockNote schema to the react-pdf content.\n     *\n     * Pass {@link pdfDefaultSchemaMappings} for the default schema.\n     */\n    mappings: Exporter<\n      NoInfer<B>,\n      NoInfer<I>,\n      NoInfer<S>,\n      React.ReactElement<Text>, // RB\n      React.ReactElement<Link> | React.ReactElement<Text>, // RI\n      TextProps[\"style\"], // RS\n      React.ReactElement<Text> // TS\n    >[\"mappings\"],\n    options?: Partial<Options>\n  ) {\n    const defaults = {\n      emojiSource: {\n        format: \"png\",\n        url: \"https://cdnjs.cloudflare.com/ajax/libs/twemoji/14.0.2/72x72/\",\n      },\n      resolveFileUrl: corsProxyResolveFileUrl,\n      colors: COLORS_DEFAULT,\n    } satisfies Partial<Options>;\n\n    const newOptions = {\n      ...defaults,\n      ...options,\n    };\n    super(schema, mappings, newOptions);\n    this.options = newOptions;\n  }\n\n  /**\n   * Mostly for internal use, you probably want to use `toBlob` or `toReactPDFDocument` instead.\n   */\n  public transformStyledText(styledText: StyledText<S>) {\n    const stylesArray = this.mapStyles(styledText.styles);\n    const styles = Object.assign({}, ...stylesArray);\n    return <Text style={styles}>{styledText.text}</Text>;\n  }\n\n  /**\n   * Mostly for internal use, you probably want to use `toBlob` or `toReactPDFDocument` instead.\n   */\n  public async transformBlocks(\n    blocks: Block<B, I, S>[], // Or BlockFromConfig<B[keyof B], I, S>?\n    nestingLevel = 0\n  ): Promise<React.ReactElement<Text>[]> {\n    const ret: React.ReactElement<Text>[] = [];\n    let numberedListIndex = 0;\n\n    for (const b of blocks) {\n      if (b.type === \"numberedListItem\") {\n        numberedListIndex++;\n      } else {\n        numberedListIndex = 0;\n      }\n      const children = await this.transformBlocks(b.children, nestingLevel + 1);\n      const self = await this.mapBlock(\n        b as any,\n        nestingLevel,\n        numberedListIndex\n      ); // TODO: any\n\n      if (b.type === \"pageBreak\") {\n        ret.push(self);\n        continue;\n      }\n\n      const style = this.blocknoteDefaultPropsToReactPDFStyle(b.props as any);\n      ret.push(\n        <>\n          <View\n            style={{\n              paddingVertical: 3 * PIXELS_PER_POINT,\n              ...this.styles.block,\n              ...style,\n            }}>\n            {self}\n          </View>\n          {children.length > 0 && (\n            <View\n              style={{\n                marginLeft: FONT_SIZE * 1.5 * PIXELS_PER_POINT,\n                ...this.styles.blockChildren,\n              }}>\n              {children}\n            </View>\n          )}\n        </>\n      );\n    }\n\n    return ret;\n  }\n\n  protected async registerFonts() {\n    if (this.fontsRegistered) {\n      return;\n    }\n\n    if (this.options.emojiSource) {\n      Font.registerEmojiSource(this.options.emojiSource);\n    }\n    let font = await loadFontDataUrl(\n      await import(\"@shared/assets/fonts/inter/Inter_18pt-Regular.ttf\")\n    );\n    Font.register({\n      family: \"Inter\",\n      src: font,\n    });\n\n    font = await loadFontDataUrl(\n      await import(\"@shared/assets/fonts/inter/Inter_18pt-Italic.ttf\")\n    );\n    Font.register({\n      family: \"Inter\",\n      fontStyle: \"italic\",\n      src: font,\n    });\n\n    font = await loadFontDataUrl(\n      await import(\"@shared/assets/fonts/inter/Inter_18pt-Bold.ttf\")\n    );\n    Font.register({\n      family: \"Inter\",\n      src: font,\n      fontWeight: \"bold\",\n    });\n\n    font = await loadFontDataUrl(\n      await import(\"@shared/assets/fonts/inter/Inter_18pt-BoldItalic.ttf\")\n    );\n    Font.register({\n      family: \"Inter\",\n      fontStyle: \"italic\",\n      src: font,\n      fontWeight: \"bold\",\n    });\n\n    font = await loadFontDataUrl(\n      await import(\"@shared/assets/fonts/GeistMono-Regular.ttf\")\n    );\n    Font.register({\n      family: \"GeistMono\",\n      src: font,\n    });\n\n    this.fontsRegistered = true;\n  }\n\n  /**\n   * Convert a document (array of Blocks) to a react-pdf Document.\n   */\n  public async toReactPDFDocument(\n    blocks: Block<B, I, S>[],\n    options: {\n      /**\n       * Add a header to every page.\n       * The React component passed must be a React-PDF component\n       */\n      header?: React.ReactElement;\n      /**\n       * Add a footer to every page.\n       * The React component passed must be a React-PDF component\n       */\n      footer?: React.ReactElement;\n    } = {}\n  ) {\n    await this.registerFonts();\n\n    return (\n      <Document>\n        <Page dpi={100} size=\"A4\" style={this.styles.page}>\n          {options.header && (\n            <View fixed style={this.styles.header}>\n              {options.header}\n            </View>\n          )}\n          {await this.transformBlocks(blocks)}\n          {options.footer && (\n            <View\n              fixed\n              style={[\n                {\n                  left: this.styles.page.paddingHorizontal || 0,\n                  bottom: (this.styles.page.paddingBottom || 0) / 2,\n                  right: this.styles.page.paddingHorizontal || 0,\n                },\n                this.styles.footer,\n              ]}>\n              {options.footer}\n            </View>\n          )}\n        </Page>\n      </Document>\n    );\n  }\n\n  protected blocknoteDefaultPropsToReactPDFStyle(\n    props: Partial<DefaultProps>\n  ): Style {\n    return {\n      textAlign: props.textAlignment,\n      backgroundColor:\n        props.backgroundColor === \"default\" || !props.backgroundColor\n          ? undefined\n          : this.options.colors[\n              props.backgroundColor as keyof typeof this.options.colors\n            ].background,\n      color:\n        props.textColor === \"default\" || !props.textColor\n          ? undefined\n          : this.options.colors[\n              props.textColor as keyof typeof this.options.colors\n            ].text,\n      alignItems:\n        props.textAlignment === \"right\"\n          ? \"flex-end\"\n          : props.textAlignment === \"center\"\n          ? \"center\"\n          : undefined,\n    };\n  }\n}\n"],"names":["PIXELS_PER_POINT","styles","StyleSheet","BULLET_MARKER","CHECK_MARKER_UNCHECKED","jsx","Svg","Path","CHECK_MARKER_CHECKED","ListItem","listMarker","children","style","jsxs","View","Text","Table","props","row","index","cell","FONT_SIZE","pdfBlockMappingForDefaultSchema","block","exporter","_nestingLevel","numberedListIndex","fontSizeEM","lines","_a","line","indent","Fragment","file","caption","t","Image","defaultText","icon","_exporter","Link","pdfInlineContentMappingForDefaultSchema","ic","content","pdfStyleMappingForDefaultSchema","val","pdfDefaultSchemaMappings","corsProxyResolveFileUrl","url","loadFileDataUrl","requireUrl","mimeType","define_import_meta_env_default","fileBase64","loadFileBuffer","loadFontDataUrl","fs","dataUrl","PDFExporter","Exporter","schema","mappings","options","newOptions","COLORS_DEFAULT","__publicField","styledText","stylesArray","blocks","nestingLevel","ret","b","self","Font","font","Document","Page"],"mappings":";;;;;;AAKA,MAAMA,IAAmB,MAEnBC,IAASC,EAAW,OAAO;AAAA,EAC/B,UAAU;AAAA,IACR,SAAS;AAAA,IACT,eAAe;AAAA,IACf,KAAK,IAAIF;AAAAA,IACT,cAAc;AAAA;AAAA,EAChB;AAAA,EACA,QAAQ;AAAA,IACN,YAAY;AAAA;AAAA,EACd;AACF,CAAC,GAEYG,IAAgB,KAGhBC,IACX,gBAAAC;AAAA,EAACC;AAAA,EAAA;AAAA,IACC,OAAO,EAAE,WAAW,EAAE;AAAA,IACtB,QAAO;AAAA,IACP,SAAQ;AAAA,IACR,OAAM;AAAA,IACN,MAAK;AAAA,IACL,UAAA,gBAAAD,EAACE,GAAK,EAAA,GAAE,iJAAiJ,CAAA;AAAA,EAAA;AAC3J,GAIWC,IACX,gBAAAH;AAAA,EAACC;AAAA,EAAA;AAAA,IACC,OAAO,EAAE,WAAW,EAAE;AAAA,IACtB,QAAO;AAAA,IACP,SAAQ;AAAA,IACR,OAAM;AAAA,IACN,MAAK;AAAA,IACL,UAAA,gBAAAD,EAACE,GAAK,EAAA,GAAE,qNAAqN,CAAA;AAAA,EAAA;AAC/N,GAGWE,IAAW,CAAC;AAAA,EACvB,YAAAC;AAAA,EACA,UAAAC;AAAA,EACA,OAAAC;AACF,MAMI,gBAAAC,EAACC,KAAK,OAAO,CAACb,EAAO,UAAUW,KAAS,EAAE,GACxC,UAAA;AAAA,EAAC,gBAAAP,EAAAS,GAAA,EAAK,OAAOb,EAAO,QAIjB,UAAA,OAAOS,KAAe,WACpB,gBAAAL,EAAAU,GAAA,EAAM,UAAWL,EAAA,CAAA,IAElBA,GAEJ;AAAA,EACCC;AACH,EAAA,CAAA,GC5DEX,IAAmB,MAInBC,IAASC,EAAW,OAAO;AAAA,EAC/B,gBAAgB;AAAA;AAAA,EAEhB;AAAA,EACA,KAAK;AAAA,IACH,eAAe;AAAA,IACf,UAAU;AAAA;AAAA;AAAA,IAGV,SAAS;AAAA,EACX;AAAA,EACA,MAAM;AAAA,IACJ,mBAAmB,IAAIF;AAAAA,IACvB,YAAY,IAAIA;AAAAA;AAAAA,IAEhB,YAAY;AAAA,IACZ,WAAW;AAAA,IACX,UAAU;AAAA,IACV,YAAY;AAAA,EACd;AAAA,EACA,YAAY;AAAA,IACV,cAAc;AAAA,EAChB;AAAA,EACA,WAAW;AAAA,IACT,aAAa;AAAA,EACf;AACF,CAAC,GAEYgB,IAAQ,CAACC,MAYnB,gBAAAZ,EAAAS,GAAA,EAAK,OAAOb,EAAO,gBAAgB,MAAM,IACvC,YAAM,KAAK,KAAK,IAAI,CAACiB,GAAKC,MACzB,gBAAAd;AAAA,EAACS;AAAA,EAAA;AAAA,IACC,OAAO;AAAA,MACLb,EAAO;AAAA,MACPkB,MAAUF,EAAM,KAAK,KAAK,SAAS,IAAIhB,EAAO,aAAa,CAAC;AAAA,IAC9D;AAAA,IAEC,UAAIiB,EAAA,MAAM,IAAI,CAACE,GAAMD,MACpB,gBAAAd;AAAA,MAACS;AAAA,MAAA;AAAA,QACC,OAAO;AAAA,UACLb,EAAO;AAAA,UACPkB,MAAUD,EAAI,MAAM,SAAS,IAAIjB,EAAO,YAAY,CAAC;AAAA,UACrDgB,EAAM,KAAK,aAAaE,CAAK,IACzB,EAAE,OAAOF,EAAM,KAAK,aAAaE,CAAK,EACtC,IAAA,EAAE,MAAM,EAAE;AAAA,QAChB;AAAA,QAEC,UAAAF,EAAM,YAAY,uBAAuBG,CAAI;AAAA,MAAA;AAAA,MADzCD;AAAAA,IAAA,CAGR;AAAA,EAAA;AAAA,EAbIA;AAcP,CACD,GACH,GC1DInB,IAAmB,MACnBqB,IAAY,IAELC,IAMT;AAAA,EACF,WAAW,CAACC,GAAOC,wBAETT,GAAM,EAAA,UAAAS,EAAS,uBAAuBD,EAAM,OAAO,EAAE,CAAA;AAAA,EAE/D,gBAAgB,CAACA,GAAOC,MAGpB,gBAAAnB,EAACI,GAAS,EAAA,YAAYN,GACpB,UAAA,gBAAAE,EAACU,GAAM,EAAA,UAAAS,EAAS,uBAAuBD,EAAM,OAAO,EAAA,CAAE,EACxD,CAAA;AAAA,EAGJ,kBAAkB,CAACA,GAAOC,GAAUC,GAAeC,MAI9C,gBAAArB,EAAAI,GAAA,EAAS,YAAY,GAAGiB,CAAiB,KACxC,UAAC,gBAAArB,EAAAU,GAAA,EAAM,UAASS,EAAA,uBAAuBD,EAAM,OAAO,GAAE,EACxD,CAAA;AAAA;AAAA;AAAA,EAKJ,eAAe,CAACA,GAAOC,MAEnB,gBAAAnB;AAAA,IAACI;AAAA,IAAA;AAAA,MACC,YACEc,EAAM,MAAM,UAAUf,IAAuBJ;AAAA,MAE/C,4BAACW,GAAM,EAAA,UAAAS,EAAS,uBAAuBD,EAAM,OAAO,GAAE;AAAA,IAAA;AAAA,EAAA;AAAA,EAI5D,SAAS,CAACA,GAAOC,MAAa;AACtB,UAAAG,IACJJ,EAAM,MAAM,UAAU,IAAI,IAAIA,EAAM,MAAM,UAAU,IAAI,MAAM;AAE9D,WAAA,gBAAAlB;AAAA,MAACU;AAAA,MAAA;AAAA,QACC,OAAO;AAAA,UACL,UAAUY,IAAaN,IAAYrB;AAAAA,UACnC,YAAY;AAAA,QACd;AAAA,QACC,UAAAwB,EAAS,uBAAuBD,EAAM,OAAO;AAAA,MAAA;AAAA,IAAA;AAAA,EAGpD;AAAA,EACA,WAAW,CAACA,MAAU;;AAEd,UAAAK,OADeC,IAAAN,EAAM,QAA8B,CAAC,MAArC,gBAAAM,EAAwC,SAAQ,IAC3C,MAAM;AAAA,CAAI,EAAE,IAAI,CAACC,GAAMX,MAAU;;AACzD,YAAMY,MAASF,IAAAC,EAAK,MAAM,MAAM,MAAjB,gBAAAD,EAAqB,GAAG,WAAU;AAG/C,aAAA,gBAAAxB;AAAA,QAACU;AAAA,QAAA;AAAA,UAEC,OAAO;AAAA,YACL,YAAYgB,IAAS,MAAM/B;AAAAA,UAC7B;AAAA,UACC,UAAK8B,EAAA,eAAe,gBAAAzB,EAAA2B,GAAA,EAAE,UAAM,KAAA;AAAA,QAAA;AAAA,QAJxB,QAAQb,CAAK;AAAA,MAAA;AAAA,IAKpB,CAEH;AAGC,WAAA,gBAAAd;AAAA,MAACS;AAAA,MAAA;AAAA,QACC,MAAM;AAAA,QACN,OAAO;AAAA,UACL,SAAS,KAAKd;AAAAA,UACd,iBAAiB;AAAA,UACjB,OAAO;AAAA,UACP,YAAY;AAAA,UACZ,UAAUqB,IAAYrB;AAAAA,UACtB,YAAY;AAAA,QACd;AAAA,QACC,UAAA4B;AAAA,MAAA;AAAA,IAAA;AAAA,EAGP;AAAA,EACA,WAAW,MACF,gBAAAvB,EAACS,GAAK,EAAA,OAAK,GAAC,CAAA;AAAA,EAErB,OAAO,CAACS,GAAOC,MAEX,gBAAAX,EAACC,GAAK,EAAA,MAAM,IACT,UAAA;AAAA,IAAAmB;AAAA,MACCV,EAAM;AAAA,MACN;AAAA,MACC,gBAAAlB,EAAAC,GAAA,EAAI,QAAQ,IAAI,OAAO,IAAI,SAAQ,aAAY,MAAK,gBACnD,UAAA,gBAAAD,EAACE,GAAK,EAAA,GAAE,mrBAAkrB,EAC5rB,CAAA;AAAA,IAEF;AAAA,IACC2B,EAAQX,EAAM,KAAe;AAAA,EAChC,EAAA,CAAA;AAAA,EAGJ,OAAO,CAACA,GAAOC,MAEX,gBAAAX,EAACC,GAAK,EAAA,MAAM,IACT,UAAA;AAAA,IAAAmB;AAAA,MACCV,EAAM;AAAA,MACN;AAAA,MACC,gBAAAlB,EAAAC,GAAA,EAAI,QAAQ,IAAI,OAAO,IAAI,SAAQ,aAAY,MAAK,gBACnD,UAAA,gBAAAD,EAACE,GAAK,EAAA,GAAE,wTAAuT,EACjU,CAAA;AAAA,IAEF;AAAA,IACC2B,EAAQX,EAAM,KAAe;AAAA,EAChC,EAAA,CAAA;AAAA,EAGJ,MAAM,CAACA,GAAOC,MAEV,gBAAAX,EAACC,GAAK,EAAA,MAAM,IACT,UAAA;AAAA,IAAAmB;AAAA,MACCV,EAAM;AAAA,MACN;AAAA,MACC,gBAAAlB,EAAAC,GAAA,EAAI,QAAQ,IAAI,OAAO,IAAI,SAAQ,aAAY,MAAK,gBACnD,UAAA,gBAAAD,EAACE,GAAK,EAAA,GAAE,+JAA8J,EACxK,CAAA;AAAA,IAEF;AAAA,IACC2B,EAAQX,EAAM,KAAe;AAAA,EAChC,EAAA,CAAA;AAAA,EAGJ,OAAO,OAAOA,GAAOY,MAEjB,gBAAAtB,EAACC,GAAK,EAAA,MAAM,IACV,UAAA;AAAA,IAAA,gBAAAT;AAAA,MAAC+B;AAAA,MAAA;AAAA,QACC,KAAK,MAAMD,EAAE,YAAYZ,EAAM,MAAM,GAAG;AAAA,QACxC,OAAO;AAAA,UACL,OAAOA,EAAM,MAAM,eAAevB;AAAAA,QACpC;AAAA,MAAA;AAAA,IACF;AAAA,IACCkC,EAAQX,EAAM,KAAQ;AAAA,EACzB,EAAA,CAAA;AAAA,EAGJ,OAAO,CAACA,GAAOY,wBACLnB,GAAM,EAAA,MAAMO,EAAM,SAAS,aAAaY,EAAG,CAAA;AAEvD;AAEA,SAASF,EACPhB,GACAoB,GACAC,GACAC,GACA;AAEA,SACG,gBAAAlC,EAAAmC,GAAA,EAAK,KAAKvB,EAAM,KACf,UAAA,gBAAAJ;AAAA,IAACC;AAAA,IAAA;AAAA,MACC,OAAO;AAAA,QACL,SAAS;AAAA,QACT,KAAK,IAAId;AAAAA,QACT,eAAe;AAAA,MACjB;AAAA,MACC,UAAA;AAAA,QAAAsC;AAAA,QACA,gBAAAjC,EAAAU,GAAA,EAAM,UAAME,EAAA,QAAQoB,GAAY;AAAA,MAAA;AAAA,IAAA;AAAA,EAErC,EAAA,CAAA;AAEJ;AAEA,SAASH,EACPjB,GACAsB,GACA;AACI,MAACtB,EAAM;AAIT,WAAA,gBAAAZ;AAAA,MAACU;AAAA,MAAA;AAAA,QACC,OAAO;AAAA,UACL,OAAOE,EAAM,eACTA,EAAM,eAAejB,IACrB;AAAA,UACJ,UAAUqB,IAAY,MAAMrB;AAAAA,QAC9B;AAAA,QACC,UAAMiB,EAAA;AAAA,MAAA;AAAA,IAAA;AAGb;AC3MO,MAAMwB,IAKT;AAAA,EACF,MAAM,CAACC,GAAIlB,MAEN,gBAAAnB,EAAAmC,GAAA,EAAK,MAAME,EAAG,MACZ,UAAGA,EAAA,QAAQ,IAAI,CAACC,MAAYnB,EAAS,oBAAoBmB,CAAO,CAAC,EACpE,CAAA;AAAA,EAGJ,MAAM,CAACD,GAAIlB,MACFA,EAAS,oBAAoBkB,CAAE;AAE1C,GCnBaE,IAGT;AAAA,EACF,MAAM,CAACC,MACAA,IAGE;AAAA,IACL,YAAY;AAAA,EAAA,IAHL;EAMX,QAAQ,CAACA,MACFA,IAGE;AAAA,IACL,WAAW;AAAA,EAAA,IAHJ;EAMX,WAAW,CAACA,MACLA,IAGE;AAAA,IACL,gBAAgB;AAAA;AAAA,EAAA,IAHT;EAMX,QAAQ,CAACA,MACFA,IAGE;AAAA,IACL,gBAAgB;AAAA,EAAA,IAHT;EAMX,iBAAiB,CAACA,GAAKrB,MAChBqB,IAGE;AAAA,IACL,iBACErB,EAAS,QAAQ,OAAOqB,CAA2C,EAChE;AAAA,EAAA,IALE;EAQX,WAAW,CAACA,GAAKrB,MACVqB,IAGE;AAAA,IACL,OACErB,EAAS,QAAQ,OAAOqB,CAA2C,EAChE;AAAA,EAAA,IALE;EAQX,MAAM,CAACA,MACAA,IAGE;AAAA,IACL,YAAY;AAAA,EAAA,IAHL;AAMb,GC/DaC,KAA2B;AAAA,EACtC,cAAcxB;AAAA,EACd,sBAAsBmB;AAAA,EACtB,cAAcG;AAChB;ACRA,eAAsBG,EAAwBC,GAAa;AAEvD,SAAA,0DACA,mBAAmBA,CAAG;AAE1B;;ACCsB,eAAAC,EACpBC,GACAC,GACA;AACI,MAAAC,EAAgB,aAAa,QAAQ;AAEjC,UAAAC,KADS,MAAMC,EAAeJ,CAAU,GACpB,SAAS,QAAQ;AAGpC,WADS,QAAQC,CAAQ,WAAWE,CAAU;AAAA,EAC9C;AAGP,WAAOH,EAAW;AAEtB;AAEA,eAAsBK,EAAgBL,GAAiC;AAC9D,SAAAD,EAAgBC,GAAY,UAAU;AAC/C;AAEA,eAAsBI,EAAeJ,GAEH;AAC5B,MAAAE,EAAgB,aAAa,QAAQ;AAGjC,UAAAI,IAAK,QAAQ,IAAI;AACvB,QAAIR,IAAME,EAAW;AAEjB,WAAAF,EAAI,WAAW,OAAO,MAClBA,IAAAA,EAAI,UAAU,CAAa,IAEpBQ,EAAG,aAAaR,CAAG;AAAA,EAC3B,OACF;AAEL,UAAMS,IAAUP,EAAW;AAIpB,WADa,OADH,MAAM,MAAMO,CAAO,GACD;EAErC;AACF;ACrBA,MAAMpC,IAAY,IACZrB,IAAmB;AAalB,MAAM0D,WAIHC,EAQR;AAAA,EAuBO,YAIcC,GAMnBC,GASAC,GACA;AAUA,UAAMC,IAAa;AAAA,MACjB,GAVe;AAAA,QACf,aAAa;AAAA,UACX,QAAQ;AAAA,UACR,KAAK;AAAA,QACP;AAAA,QACA,gBAAgBhB;AAAA,QAChB,QAAQiB;AAAA,MAAA;AAAA,MAKR,GAAGF;AAAA,IAAA;AAEC,UAAAF,GAAQC,GAAUE,CAAU;AAxD5B,IAAAE,EAAA,yBAAkB;AAEnB,IAAAA,EAAA,gBAAS/D,EAAW,OAAO;AAAA,MAChC,MAAM;AAAA,QACJ,YAAY;AAAA,QACZ,eAAe;AAAA,QACf,mBAAmB;AAAA,QACnB,YAAY;AAAA,QACZ,UAAUmB,IAAYrB;AAAA;AAAA,QACtB,YAAY;AAAA,MACd;AAAA,MACA,OAAO,CAAC;AAAA,MACR,eAAe,CAAC;AAAA,MAChB,QAAQ,CAAC;AAAA,MACT,QAAQ;AAAA;AAAA,QAEN,UAAU;AAAA,MACZ;AAAA,IAAA,CACD;AAEe,IAAAiE,EAAA;AAMK,SAAA,SAAAL,GA+BnB,KAAK,UAAUG;AAAA,EACjB;AAAA;AAAA;AAAA;AAAA,EAKO,oBAAoBG,GAA2B;AACpD,UAAMC,IAAc,KAAK,UAAUD,EAAW,MAAM,GAC9CjE,IAAS,OAAO,OAAO,CAAA,GAAI,GAAGkE,CAAW;AAC/C,WAAQ,gBAAA9D,EAAAU,GAAA,EAAK,OAAOd,GAAS,YAAW,KAAK,CAAA;AAAA,EAC/C;AAAA;AAAA;AAAA;AAAA,EAKA,MAAa,gBACXmE,GACAC,IAAe,GACsB;AACrC,UAAMC,IAAkC,CAAA;AACxC,QAAI5C,IAAoB;AAExB,eAAW6C,KAAKH,GAAQ;AAClB,MAAAG,EAAE,SAAS,qBACb7C,MAEoBA,IAAA;AAEtB,YAAMf,IAAW,MAAM,KAAK,gBAAgB4D,EAAE,UAAUF,IAAe,CAAC,GAClEG,IAAO,MAAM,KAAK;AAAA,QACtBD;AAAA,QACAF;AAAA,QACA3C;AAAA,MAAA;AAGE,UAAA6C,EAAE,SAAS,aAAa;AAC1B,QAAAD,EAAI,KAAKE,CAAI;AACb;AAAA,MACF;AAEA,YAAM5D,IAAQ,KAAK,qCAAqC2D,EAAE,KAAY;AAClE,MAAAD,EAAA;AAAA,QAEA,gBAAAzD,EAAAmB,GAAA,EAAA,UAAA;AAAA,UAAA,gBAAA3B;AAAA,YAACS;AAAA,YAAA;AAAA,cACC,OAAO;AAAA,gBACL,iBAAiB,IAAId;AAAA,gBACrB,GAAG,KAAK,OAAO;AAAA,gBACf,GAAGY;AAAA,cACL;AAAA,cACC,UAAA4D;AAAA,YAAA;AAAA,UACH;AAAA,UACC7D,EAAS,SAAS,KACjB,gBAAAN;AAAA,YAACS;AAAA,YAAA;AAAA,cACC,OAAO;AAAA,gBACL,YAAYO,IAAY,MAAMrB;AAAA,gBAC9B,GAAG,KAAK,OAAO;AAAA,cACjB;AAAA,cACC,UAAAW;AAAA,YAAA;AAAA,UACH;AAAA,QAAA,GAEJ;AAAA,MAAA;AAAA,IAEJ;AAEO,WAAA2D;AAAA,EACT;AAAA,EAEA,MAAgB,gBAAgB;AAC9B,QAAI,KAAK;AACP;AAGE,IAAA,KAAK,QAAQ,eACVG,EAAA,oBAAoB,KAAK,QAAQ,WAAW;AAEnD,QAAIC,IAAO,MAAMnB;AAAA,MACf,MAAM,OAAO,kCAAmD;AAAA,IAAA;AAElE,IAAAkB,EAAK,SAAS;AAAA,MACZ,QAAQ;AAAA,MACR,KAAKC;AAAA,IAAA,CACN,GAEDA,IAAO,MAAMnB;AAAA,MACX,MAAM,OAAO,iCAAkD;AAAA,IAAA,GAEjEkB,EAAK,SAAS;AAAA,MACZ,QAAQ;AAAA,MACR,WAAW;AAAA,MACX,KAAKC;AAAA,IAAA,CACN,GAEDA,IAAO,MAAMnB;AAAA,MACX,MAAM,OAAO,+BAAgD;AAAA,IAAA,GAE/DkB,EAAK,SAAS;AAAA,MACZ,QAAQ;AAAA,MACR,KAAKC;AAAA,MACL,YAAY;AAAA,IAAA,CACb,GAEDA,IAAO,MAAMnB;AAAA,MACX,MAAM,OAAO,qCAAsD;AAAA,IAAA,GAErEkB,EAAK,SAAS;AAAA,MACZ,QAAQ;AAAA,MACR,WAAW;AAAA,MACX,KAAKC;AAAA,MACL,YAAY;AAAA,IAAA,CACb,GAEDA,IAAO,MAAMnB;AAAA,MACX,MAAM,OAAO,iCAA4C;AAAA,IAAA,GAE3DkB,EAAK,SAAS;AAAA,MACZ,QAAQ;AAAA,MACR,KAAKC;AAAA,IAAA,CACN,GAED,KAAK,kBAAkB;AAAA,EACzB;AAAA;AAAA;AAAA;AAAA,EAKA,MAAa,mBACXN,GACAN,IAWI,IACJ;AACA,iBAAM,KAAK,iBAGT,gBAAAzD,EAACsE,GACC,EAAA,UAAA,gBAAA9D,EAAC+D,GAAK,EAAA,KAAK,KAAK,MAAK,MAAK,OAAO,KAAK,OAAO,MAC1C,UAAA;AAAA,MAAQd,EAAA,UACN,gBAAAzD,EAAAS,GAAA,EAAK,OAAK,IAAC,OAAO,KAAK,OAAO,QAC5B,UAAAgD,EAAQ,OACX,CAAA;AAAA,MAED,MAAM,KAAK,gBAAgBM,CAAM;AAAA,MACjCN,EAAQ,UACP,gBAAAzD;AAAA,QAACS;AAAA,QAAA;AAAA,UACC,OAAK;AAAA,UACL,OAAO;AAAA,YACL;AAAA,cACE,MAAM,KAAK,OAAO,KAAK,qBAAqB;AAAA,cAC5C,SAAS,KAAK,OAAO,KAAK,iBAAiB,KAAK;AAAA,cAChD,OAAO,KAAK,OAAO,KAAK,qBAAqB;AAAA,YAC/C;AAAA,YACA,KAAK,OAAO;AAAA,UACd;AAAA,UACC,UAAQgD,EAAA;AAAA,QAAA;AAAA,MACX;AAAA,IAAA,EAEJ,CAAA,EACF,CAAA;AAAA,EAEJ;AAAA,EAEU,qCACR7C,GACO;AACA,WAAA;AAAA,MACL,WAAWA,EAAM;AAAA,MACjB,iBACEA,EAAM,oBAAoB,aAAa,CAACA,EAAM,kBAC1C,SACA,KAAK,QAAQ,OACXA,EAAM,eACR,EAAE;AAAA,MACR,OACEA,EAAM,cAAc,aAAa,CAACA,EAAM,YACpC,SACA,KAAK,QAAQ,OACXA,EAAM,SACR,EAAE;AAAA,MACR,YACEA,EAAM,kBAAkB,UACpB,aACAA,EAAM,kBAAkB,WACxB,WACA;AAAA,IAAA;AAAA,EAEV;AACF;"}